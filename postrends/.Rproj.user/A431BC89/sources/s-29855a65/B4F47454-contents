rm_accent <- function(str) {
  
  if(!is.character(str))
    str <- as.character(str)
  
  str <- stringi::stri_escape_unicode(str)
  
  symbols <- c(
    acute = stringi::stri_unescape_unicode('\u00e1\u00e9\u00ed\u00f3\u00fa\u00c1\u00c9\u00cd\u00d3\u00da\u00fd\u00dd'),
    grave = stringi::stri_unescape_unicode('\u00e0\u00e8\u00ec\u00f2\u00f9\u00c0\u00c8\u00cc\u00d2\u00d9'),
    circunflex = stringi::stri_unescape_unicode('\u00e2\u00ea\u00ee\u00f4\u00fb\u00c2\u00ca\u00ce\u00d4\u00db'),
    tilde = stringi::stri_unescape_unicode('\u00e3\u00f5\u00c3\u00d5\u00f1\u00d1'),
    umlaut = stringi::stri_unescape_unicode('\u00e4\u00eb\u00ef\u00f6\u00fc\u00c4\u00cb\u00cf\u00d6\u00dc\u00ff'),
    cedil = stringi::stri_unescape_unicode('\u00e7\u00c7')
  )
  
  nudeSymbols <- c(
    acute = 'aeiouAEIOUyY',
    grave = 'aeiouAEIOU',
    circunflex = 'aeiouAEIOU',
    tilde = 'aoAOnN',
    umlaut = 'aeiouAEIOUy',
    cedil = 'cC'
  )
  resp <- chartr(paste(symbols, collapse=""), paste(nudeSymbols, collapse=""), stringi::stri_unescape_unicode(str))
  return(resp)
}

#-------------------------------------------
library(tidyverse)
dados <- readRDS('data/d_vis.rds')

limpa_dados <- function(str){
  resp <- str %>%
    str_trim %>%
    str_to_lower %>%
    rm_accent
  
  return(resp)
}


conselheiros <- dados %>%
  select(relator,tipo) %>%
  count(relator,tipo) %>%
  filter(tipo == 'NAO IDENTIFICADO') %>%
  arrange(desc(n)) %>%
  filter(!str_detect(relator, regex('vazio',ignore_case = T)) &
         !str_detect(relator, regex('nao informado',ignore_case = T))) %>%
  map_df(limpa_dados)


csv <- paste0(getwd(),'/data/conselheiros.csv')

conselheiro_nomeado = read_delim(csv,delim = ';',locale = locale(encoding = 'latin1')) %>%
  set_names(rm_accent(names(.))) %>%
  mutate(relator =str_extract(Conselheiros, '[[:alnum:][:blank:]]*'),
         tipo = case_when(str_detect(Representacao, regex('contribuinte',ignore_case = T))~'CONTRIBUINTES',
                          str_detect(Representacao, regex('fazenda',ignore_case = T))~'FAZENDA',
                          TRUE~'zuado')) %>%
  map_df(limpa_dados) %>%
  filter(relator != 'vago') %>%
  select(relator,tipo)


teste <- conselheiros %>%
  left_join(conselheiro_nomeado, 'relator') %>%
  distinct() %>%
  filter(!is.na(tipo.y)) %>%
  select(relator,tipo=tipo.y) %>%
  mutate(relator = str_to_upper(relator),
         tipo = str_to_upper(tipo))

jorge = 'jorge ?(Olmiro)? ?(Lock)? Freire'

todos_relatores <- readRDS('data/d_vis.rds') %>%
  select(relator,tipo) %>%
  distinct() %>%
  left_join(teste, 'relator') %>%
  mutate(tipo = ifelse(tipo.x == 'NAO IDENTIFICADO' & !is.na(tipo.y),tipo.y,tipo.x)) %>%
  select(relator,tipo) %>%
  distinct %>%
  mutate(tipo = ifelse(str_detect(relator,regex(jorge,ignore_case = T)),'FAZENDA',tipo))

# saveRDS(todos_relatores,'data/relatores.rds')
  
